{"remainingRequest":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\src\\components\\courses\\CourseProjects.vue?vue&type=template&id=1b4ec91c&scoped=true&","dependencies":[{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\src\\components\\courses\\CourseProjects.vue","mtime":1639320381414},{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}