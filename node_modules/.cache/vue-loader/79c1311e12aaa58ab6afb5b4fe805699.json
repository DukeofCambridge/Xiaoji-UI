{"remainingRequest":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\src\\components\\admin\\BulkRegistration.vue?vue&type=style&index=0&id=addeab4a&scoped=true&lang=css&","dependencies":[{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\src\\components\\admin\\BulkRegistration.vue","mtime":1639546821200},{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Albion Tech\\LabSys\\Experiment-Teaching-System\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYWRkLWJ1dHRvbiB7CiAgbWFyZ2luOiAxOHB4IDAgMCAxMHB4Owp9Cg=="},{"version":3,"sources":["BulkRegistration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA","file":"BulkRegistration.vue","sourceRoot":"src/components/admin","sourcesContent":["<!-- 批量添加用户的表单 -->\r\n<template>\r\n  <div style=\"text-align: left\">\r\n    <el-button class=\"add-button\" type=\"success\" @click=\"dialogFormVisible = true\">创建用户</el-button>\r\n    <el-dialog\r\n      title=\"创建用户\"\r\n      :visible.sync=\"dialogFormVisible\"\r\n      @close=\"clear\"\r\n      width=\"25%\">\r\n      <el-form ref=\"form\" :model=\"loginForm\" :rules=\"rules\" label-position=\"left\"\r\n               label-width=\"0px\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input type=\"text\" v-model=\"loginForm.username\"\r\n                    auto-complete=\"off\" placeholder=\"账号\"></el-input>\r\n        </el-form-item>\r\n<!--        <el-form-item prop=\"password\">-->\r\n<!--          <el-input type=\"password\" v-model=\"loginForm.password\"-->\r\n<!--                    auto-complete=\"off\" placeholder=\"密码\"></el-input>-->\r\n<!--        </el-form-item>-->\r\n        <el-form-item>\r\n          <el-input type=\"text\" v-model=\"loginForm.name\"\r\n                    auto-complete=\"off\" placeholder=\"姓名\"></el-input>\r\n        </el-form-item>\r\n<!--        <el-form-item>-->\r\n<!--          <el-input type=\"text\" v-model=\"loginForm.phone\"-->\r\n<!--                    auto-complete=\"off\" placeholder=\"电话号码\"></el-input>-->\r\n<!--        </el-form-item>-->\r\n        <el-form-item>\r\n          <el-input type=\"text\" v-model=\"loginForm.email\"\r\n                    auto-complete=\"off\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item style=\"margin-left: 10px\">\r\n          <el-radio-group v-model=\"loginForm.role\">\r\n            <el-radio :label=5>学生</el-radio>\r\n            <el-radio :label=3>教师</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item style=\"width: 100%\">\r\n          <el-button type=\"primary\" style=\"width: 40%;margin-left: 30%\" v-on:click=\"register\">添加</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'BulkRegistration',\r\n  data () {\r\n    const validateEmail = (rule, value,callback) => {\r\n      const reg =/^([a-zA-Z0-9]+[-_\\.]?)+@[a-zA-Z0-9]+\\.[a-z]+$/;\r\n      if(value===''||value===undefined||value===null){\r\n        callback();\r\n      }else{\r\n        if (!reg.test(value)){\r\n          callback(new Error('请输入正确的邮箱'));\r\n        } else {\r\n          callback();\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      dialogFormVisible: false,\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '账号不能为空', trigger: 'blur' },\r\n          { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入注册邮箱', trigger: 'blur' },\r\n          { validator: validateEmail, trigger: 'blur' }\r\n        ],\r\n      },\r\n      loginForm: {\r\n        username: '',\r\n        password: '',\r\n        name: '',\r\n        email: '',\r\n        role:5\r\n      },\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    clear () {\r\n      this.loginForm = {\r\n        username: '',\r\n        password: '',\r\n        name: '',\r\n        email: '',\r\n        role:5\r\n      }\r\n    },\r\n    register () {\r\n      let _this = this\r\n      this.$refs.form.validate(async valid =>{\r\n        if(!valid) return\r\n        // console.log(this.loginForm)\r\n        this.$axios\r\n          .post('/register', {\r\n            username: this.loginForm.username,\r\n            password: this.loginForm.username,\r\n            name: this.loginForm.name,\r\n            email: this.loginForm.email,\r\n            role: {\r\n              id: this.loginForm.role\r\n            }\r\n          })\r\n          .then(resp => {\r\n            if (resp.data.code === 200) {\r\n              this.$alert('注册成功', '提示', {\r\n                confirmButtonText: '确定'\r\n              })\r\n              this.clear()\r\n              this.$emit('onSubmit')\r\n              this.dialogFormVisible = false\r\n            } else {\r\n              this.$alert(resp.data.msg, '提示', {\r\n                confirmButtonText: '确定'\r\n              })\r\n            }\r\n          })\r\n          .catch(failResponse => {})\r\n      })\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .add-button {\r\n    margin: 18px 0 0 10px;\r\n  }\r\n</style>\r\n"]}]}